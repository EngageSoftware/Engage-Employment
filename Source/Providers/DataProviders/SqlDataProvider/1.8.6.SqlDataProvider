IF OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_spGetApplicationsForJob', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}{objectQualifier}EngageEmployment_spGetApplicationsForJob
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}EngageEmployment_spGetApplicationsForJob (
    @jobId int,
    @jobGroupId int,
    @applicationStatusId int,
    @userIds nvarchar(4000),
    @index int, 
    @pageSize int,
    @fillDocumentsAndProperties bit
)
AS
BEGIN

IF (@pageSize = 0)
    SET @pageSize = NULL
 
CREATE TABLE #results (
[Id] int NOT NULL IDENTITY(1,1),
[ApplicationId] int
)
 
INSERT INTO #results ([ApplicationId]) 
SELECT B.ApplicationId FROM
    (SELECT DISTINCT a.ApplicationId, a.AppliedDate
    FROM {databaseOwner}{objectQualifier}EngageEmployment_vwApplications a
    LEFT JOIN {databaseOwner}{objectQualifier}EngageEmployment_JobJobGroup jjg on (a.JobId = jjg.JobId) 
    WHERE a.JobId = @jobId
    AND (@jobGroupId IS NULL OR jjg.jobGroupId = @jobGroupId)
    AND (@applicationStatusId IS NULL OR a.StatusId = @applicationStatusId)
    AND (@userIds IS NULL OR a.UserId IN (SELECT [Value] FROM {objectQualifier}EngageEmployment_fnParseCsvString(@userIds, ',')))) AS B
ORDER BY B.AppliedDate DESC
 
SELECT @@RowCount AS TotalRecords
 
IF (@pageSize IS NULL)
    BEGIN
        SELECT a.AppliedDate, a.DisplayName, a.JobId, a.JobTitle, a.LocationName, a.ApplicationId, a.UserId, a.SalaryRequirement, a.Message, a.StatusId
        FROM #results r
        JOIN {databaseOwner}{objectQualifier}EngageEmployment_vwApplications a ON (r.ApplicationId = a.ApplicationId)
        ORDER BY r.Id
    END
ELSE
    BEGIN
        SELECT a.AppliedDate, a.DisplayName, a.JobId, a.JobTitle, a.LocationName, a.ApplicationId, a.UserId, a.SalaryRequirement, a.Message, a.StatusId
        FROM #results r
        JOIN {databaseOwner}{objectQualifier}EngageEmployment_vwApplications a ON (r.ApplicationId = a.ApplicationId)
        WHERE (r.Id >= @index * @pageSize + 1) AND r.Id < (@index * @pageSize) + @pageSize + 1
        ORDER BY r.Id
    END
END

IF (@fillDocumentsAndProperties = 1)
BEGIN
    SELECT DocumentId, [DocumentTypeId], [FileName], ApplicationId
    FROM {databaseOwner}{objectQualifier}EngageEmployment_vwDocuments
    WHERE ApplicationId IN (SELECT ApplicationId 
                            FROM #results
                            WHERE @pageSize IS NULL
                               OR ((Id >= @index * @pageSize + 1) 
                                AND Id < (@index * @pageSize) + @pageSize + 1))

    SELECT ujp.[ApplicationId], ujp.[ApplicationPropertyId], ujp.[Visibility], ap.[PropertyName],
        CASE WHEN ujp.[PropertyValue] IS NULL THEN ujp.[PropertyText] ELSE ujp.[PropertyValue] END AS PropertyValue
    FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobProperty ujp 
    JOIN {databaseOwner}{objectQualifier}EngageEmployment_ApplicationProperty ap ON (ujp.ApplicationPropertyId = ap.ApplicationPropertyId)
    WHERE ApplicationId IN (SELECT ApplicationId 
                            FROM #results
                            WHERE @pageSize IS NULL
                               OR ((Id >= @index * @pageSize + 1) 
                                AND Id < (@index * @pageSize) + @pageSize + 1))
END
GO