/**********************************************/
/***************Add/Set PortalId***************/
/**********************************************/
IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_ApplicationProperty'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_ApplicationProperty	ADD
    PortalId int NULL
--leave ApplicationProperty at a null portalId, since it is a general purpose lookup
GO
IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_DocumentType'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_DocumentType   ADD
    PortalId int NULL
--leave DocumentType at a null portalId, since it is a general purpose lookup
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_Job'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_Job    ADD
    PortalId int NULL
GO
/*
if job is in a job group and job group is assigned to a module, use that module's portalId
else if the revising user of the job is assigned to a portal (i.e., not host), use that user's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_Job WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_Job
    SET PortalId = m.PortalId
     FROM {objectQualifier}EngageEmployment_Job j
      JOIN {objectQualifier}EngageEmployment_JobJobGroup jjg ON (j.JobId = jjg.JobId)
      JOIN {objectQualifier}TabModuleSettings tms ON (CONVERT(nvarchar(50), jjg.JobGroupId) = tms.SettingValue)
      JOIN {objectQualifier}TabModules tm ON (tms.TabModuleId = tm.TabModuleId)
      JOIN {objectQualifier}Modules m ON (tm.ModuleId = m.ModuleId)
     WHERE tms.SettingName = 'JobGroupId'

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_Job WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_Job
         SET PortalId = up.PortalId
         FROM {objectQualifier}EngageEmployment_Job j 
          JOIN {objectQualifier}UserPortals up ON (j.RevisingUser = up.UserId)
         WHERE j.PortalId IS NULL

        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_Job WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_Job
            SET PortalId = (SELECT TOP 1 m.PortalId
		        FROM {objectQualifier}DesktopModules dm
                 JOIN {objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
                 JOIN {objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
                WHERE dm.FriendlyName = 'Engage: Employment')
            WHERE PortalId IS NULL
             
            IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_Job WHERE PortalId IS NULL)
            BEGIN
                UPDATE {databaseOwner}{objectQualifier}EngageEmployment_Job
                SET PortalId = (SELECT TOP 1 p.PortalId
		            FROM {objectQualifier}Portals p)
		        WHERE PortalId IS NULL
            END
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_Job    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_JobGroup'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup    ADD
    PortalId int NULL
GO
/*
if job group is assigned to a module, use that module's portalId
else if the group has a job assigned to it, use that job's portalid
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup
    SET PortalId = m.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup jg
      JOIN {databaseOwner}{objectQualifier}TabModuleSettings tms ON (CONVERT(nvarchar(50), jg.JobGroupId) = tms.SettingValue)
      JOIN {databaseOwner}{objectQualifier}TabModules tm ON (tms.TabModuleId = tm.TabModuleId)
      JOIN {databaseOwner}{objectQualifier}Modules m ON (tm.ModuleId = m.ModuleId)
     WHERE tms.SettingName = 'JobGroupId'

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup
         SET PortalId = j.PortalId
         FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup jg
          JOIN {databaseOwner}{objectQualifier}EngageEmployment_JobJobGroup jjg ON (jg.JobGroupId = jjg.JobGroupId)
          JOIN {databaseOwner}{objectQualifier}EngageEmployment_Job j ON (jjg.JobId = j.JobId)
         WHERE jg.PortalId IS NULL

        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup
            SET PortalId = (SELECT TOP 1 m.PortalId
		        FROM {databaseOwner}{objectQualifier}DesktopModules dm
                 JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
                 JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
                WHERE dm.FriendlyName = 'Engage: Employment')
            WHERE PortalId IS NULL
             
            IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_JobGroup WHERE PortalId IS NULL)
            BEGIN
                UPDATE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup
                SET PortalId = (SELECT TOP 1 p.PortalId
		            FROM {databaseOwner}{objectQualifier}Portals p)
		        WHERE PortalId IS NULL
            END
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_JobGroup    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory    ADD
    PortalId int NULL
GO
/*
if category is assigned to a job, use that job's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory
    SET PortalId = j.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory jc
      JOIN {databaseOwner}{objectQualifier}EngageEmployment_Job j ON (jc.JobCategoryId = j.JobCategoryId)

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory
        SET PortalId = (SELECT TOP 1 m.PortalId
	        FROM {databaseOwner}{objectQualifier}DesktopModules dm
             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
            WHERE dm.FriendlyName = 'Engage: Employment')
        WHERE PortalId IS NULL
         
        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory
            SET PortalId = (SELECT TOP 1 p.PortalId
	            FROM {databaseOwner}{objectQualifier}Portals p)
	        WHERE PortalId IS NULL
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition    ADD
    PortalId int NULL
GO
/*
if position is assigned to a job, use that job's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition
    SET PortalId = j.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition jp
      JOIN {databaseOwner}{objectQualifier}EngageEmployment_Job j ON (jp.JobPositionId = j.JobPositionId)

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition
        SET PortalId = (SELECT TOP 1 m.PortalId
	        FROM {databaseOwner}{objectQualifier}DesktopModules dm
             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
            WHERE dm.FriendlyName = 'Engage: Employment')
        WHERE PortalId IS NULL
         
        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition
            SET PortalId = (SELECT TOP 1 p.PortalId
	            FROM {databaseOwner}{objectQualifier}Portals p)
	        WHERE PortalId IS NULL
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_lkpLocation'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation    ADD
    PortalId int NULL
GO
/*
if location is assigned to a job, use that job's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation
    SET PortalId = j.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation l
      JOIN {databaseOwner}{objectQualifier}EngageEmployment_Job j ON (l.LocationId = j.LocationId)

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation
        SET PortalId = (SELECT TOP 1 m.PortalId
	        FROM {databaseOwner}{objectQualifier}DesktopModules dm
             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
            WHERE dm.FriendlyName = 'Engage: Employment')
        WHERE PortalId IS NULL
         
        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation
            SET PortalId = (SELECT TOP 1 p.PortalId
	            FROM {databaseOwner}{objectQualifier}Portals p)
	        WHERE PortalId IS NULL
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_lkpState'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpState    ADD
    PortalId int NULL
GO
/*
if state has a location assigned, use that location's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpState WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpState
    SET PortalId = l.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpState s
      JOIN {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation l ON (l.StateId = s.StateId)

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpState WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpState
        SET PortalId = (SELECT TOP 1 m.PortalId
	        FROM {databaseOwner}{objectQualifier}DesktopModules dm
             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
            WHERE dm.FriendlyName = 'Engage: Employment')
        WHERE PortalId IS NULL
         
        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpState WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpState
            SET PortalId = (SELECT TOP 1 p.PortalId
	            FROM {databaseOwner}{objectQualifier}Portals p)
	        WHERE PortalId IS NULL
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpState    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus    ADD
    PortalId int NULL
GO
/*
if status is assigned to a user that is assigned to a portal (i.e., not host), use that user's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus
    SET PortalId = uPort.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus us
      JOIN {databaseOwner}{objectQualifier}UserProfile uPro ON (uPro.PropertyValue = CONVERT(nvarchar(3750), us.UserStatusId))
      JOIN {databaseOwner}{objectQualifier}ProfilePropertyDefinition ppd ON (ppd.PropertyDefinitionId = uPro.PropertyDefinitionId)
      JOIN {databaseOwner}{objectQualifier}UserPortals uPort ON (uPro.UserId = uPort.UserId)
     WHERE ppd.PropertyCategory = 'Engage: Employment'
      AND ppd.PropertyName = 'EngageEmployment_UserStatus'

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus
        SET PortalId = (SELECT TOP 1 m.PortalId
	        FROM {databaseOwner}{objectQualifier}DesktopModules dm
             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
            WHERE dm.FriendlyName = 'Engage: Employment')
        WHERE PortalId IS NULL
         
        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus
            SET PortalId = (SELECT TOP 1 p.PortalId
	            FROM {databaseOwner}{objectQualifier}Portals p)
	        WHERE PortalId IS NULL
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_lkpUserStatus    ALTER COLUMN
    PortalId int NOT NULL
GO

IF NOT EXISTS (SELECT * FROM syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch'))
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch    ADD
    PortalId int NULL
GO
/*
if search has a job group, use the job group's portalId
else if search has a location, use the location's portalId
else if search has a state, use the state's portalId
else if search has a postion, use the postion's portalId
else if the search's user is assigned to a portal (i.e., not host), use the user's portalId
else use a portal where Employment is installed
else use any portal
*/
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
BEGIN
    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
    SET PortalId = jg.PortalId
     FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch us
      JOIN {databaseOwner}{objectQualifier}EngageEmployment_JobGroup jg ON (us.JobGroupId = jg.JobGroupId)

    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
    BEGIN
        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
        SET PortalId = l.PortalId
         FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch us
          JOIN {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation l ON (us.LocationId = l.LocationId)

        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
        BEGIN
            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
            SET PortalId = s.PortalId
             FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch us
              JOIN {databaseOwner}{objectQualifier}EngageEmployment_lkpState s ON (us.StateId = s.StateId)

            IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
            BEGIN
                UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
                SET PortalId = jp.PortalId
                 FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch us
                  JOIN {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition jp ON (us.JobPositionId = jp.JobPositionId)

                IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
                BEGIN
                    UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
                    SET PortalId = up.PortalId
                     FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch us
                      JOIN {databaseOwner}{objectQualifier}UserPortals up ON (us.UserId = up.UserId)

                    IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
                    BEGIN
                        UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
                        SET PortalId = (SELECT TOP 1 m.PortalId
	                        FROM {databaseOwner}{objectQualifier}DesktopModules dm
                             JOIN {databaseOwner}{objectQualifier}ModuleDefinitions md ON (dm.DesktopModuleId = md.DesktopModuleId)
                             JOIN {databaseOwner}{objectQualifier}Modules m ON (m.ModuleDefId = md.ModuleDefId)
                            WHERE dm.FriendlyName = 'Engage: Employment')
                        WHERE PortalId IS NULL
                         
                        IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch WHERE PortalId IS NULL)
                        BEGIN
                            UPDATE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch
                            SET PortalId = (SELECT TOP 1 p.PortalId
	                            FROM {databaseOwner}{objectQualifier}Portals p)
	                        WHERE PortalId IS NULL
	                    END
	                END
	            END
	        END
        END
    END
END
GO
ALTER TABLE {databaseOwner}{objectQualifier}EngageEmployment_UserJobSearch    ALTER COLUMN
    PortalId int NOT NULL
GO

/************************************************************************/
/*******************Add PortalId to Unique Constraints*******************/
/************************************************************************/
IF EXISTS (SELECT * FROM dbo.sysobjects where name = '{objectQualifier}IX_EngageEmployment_lkpJobCategory_Description')
ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpJobCategory] DROP 
	[{objectQualifier}IX_EngageEmployment_lkpJobCategory_Description]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where name = '{objectQualifier}IX_EngageEmployment_JobPosition_JobTitle')
ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpJobPosition] DROP 
	[{objectQualifier}IX_EngageEmployment_JobPosition_JobTitle]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where name = '{objectQualifier}IX_EngageEmployment_lkpLocation_Description_StateId')
ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpLocation] DROP 
    {databaseOwner}[{objectQualifier}IX_EngageEmployment_lkpLocation_Description_StateId]
GO

IF EXISTS (SELECT * FROM dbo.sysobjects where name = '{objectQualifier}IX_EngageEmployment_lkpState_Name')
ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpState] DROP 
	[{objectQualifier}IX_EngageEmployment_lkpState_Name]
GO

ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpJobCategory] ADD 
	CONSTRAINT {databaseOwner}[{objectQualifier}IX_EngageEmployment_lkpJobCategory_Description] UNIQUE  NONCLUSTERED 
	(
		[Description],
		[PortalId]
	)  ON [PRIMARY] 
GO

ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpJobPosition] ADD 
	CONSTRAINT {databaseOwner}[{objectQualifier}IX_EngageEmployment_JobPosition_JobTitle] UNIQUE  NONCLUSTERED 
	(
		[JobTitle],
		[PortalId]
	)  ON [PRIMARY] 
GO

ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpLocation] ADD 
	CONSTRAINT {databaseOwner}[{objectQualifier}IX_EngageEmployment_lkpLocation_Description_StateId] UNIQUE  NONCLUSTERED 
	(
		[Description],
		[StateId],
		[PortalId]
	)  ON [PRIMARY] 
GO

ALTER TABLE {databaseOwner}[{objectQualifier}EngageEmployment_lkpState] ADD 
	CONSTRAINT {databaseOwner}[{objectQualifier}IX_EngageEmployment_lkpState_Name] UNIQUE  NONCLUSTERED 
	(
		[Name],
		[PortalId]
	)  ON [PRIMARY] 
GO

/*************************************/
/***************Views*****************/
/*************************************/
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageEmployment_vwLocations]') AND OBJECTPROPERTY(id, N'IsView') = 1)
DROP VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwLocations]
GO
CREATE VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwLocations]
AS 
	SELECT l.LocationId, l.Description as LocationName, s.StateId, s.Name as StateName, s.Abbreviation as StateAbbreviation, jjg.JobGroupId, l.PortalId
	FROM {databaseOwner}[{objectQualifier}EngageEmployment_lkpLocation] l
	 JOIN {databaseOwner}[{objectQualifier}EngageEmployment_lkpState] s ON (l.StateId = s.StateId)
	 LEFT JOIN {databaseOwner}[{objectQualifier}EngageEmployment_Job] j ON (j.LocationId = l.LocationId)
	 LEFT JOIN {databaseOwner}[{objectQualifier}EngageEmployment_JobJobGroup] jjg ON (j.JobId = jjg.JobId)
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageEmployment_vwJobs]') AND OBJECTPROPERTY(id, N'IsView') = 1)
DROP VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwJobs]
GO
CREATE VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwJobs]
AS
select
j.JobId, p.JobTitle, p.JobPositionId, l.[Description] as LocationName, l.LocationId, s.[Name] as StateName, s.StateId,
j.RequiredQualifications, j.DesiredQualifications, jc.[Description] as JobCategory, jc.JobCategoryId,
j.IsHot, j.PostedDate, p.[Description] as PositionDescription, j.IsFilled, j.SortOrder, j.RevisingUser, j.PortalId
from
{objectQualifier}EngageEmployment_job j
join {databaseOwner}{objectQualifier}EngageEmployment_lkpJobPosition p on (j.JobPositionId = p.JobPositionId)
join {databaseOwner}{objectQualifier}EngageEmployment_lkpLocation l on (j.LocationId = l.LocationId)
join {databaseOwner}{objectQualifier}EngageEmployment_lkpState s on (l.StateId = s.StateId)
join {databaseOwner}{objectQualifier}EngageEmployment_lkpJobCategory jc on (j.JobCategoryId = jc.JobCategoryId)
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageEmployment_vwApplications]') AND OBJECTPROPERTY(id, N'IsView') = 1)
DROP VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwApplications]
GO
CREATE VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwApplications]
AS
select uj.ApplicationId, uj.UserId, uj.JobId, uj.AppliedDate, uj.SalaryRequirement, uj.Message,
 j.PortalId, j.JobTitle, j.JobPositionId, j.LocationName, j.LocationId, j.StateName, j.StateId, j.RequiredQualifications, j.DesiredQualifications, j.JobCategory, j.IsHot, j.PostedDate, j.PositionDescription, j.IsFilled, j.SortOrder
from {databaseOwner}{objectQualifier}EngageEmployment_UserJob uj
join {databaseOwner}{objectQualifier}EngageEmployment_vwJobs j ON (uj.JobId = j.JobId)
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageEmployment_vwDocuments]') AND OBJECTPROPERTY(id, N'IsView') = 1)
DROP VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwDocuments]
GO
CREATE VIEW {databaseOwner}[{objectQualifier}EngageEmployment_vwDocuments]
AS
select a.ApplicationId, d.ResumeId as DocumentId, d.FileName, d.ContentType, d.ContentLength, d.ResumeData, dt.DocumentTypeId, dt.Description as DocumentType
from {databaseOwner}{objectQualifier}EngageEmployment_vwApplications a
join {databaseOwner}{objectQualifier}EngageEmployment_ApplicationDocument ad ON (ad.ApplicationId = a.ApplicationId)
join {databaseOwner}{objectQualifier}EngageEmployment_Document d ON (ad.ResumeId = d.ResumeId)
join {databaseOwner}{objectQualifier}EngageEmployment_DocumentType dt ON (d.DocumentTypeId = dt.DocumentTypeId)
